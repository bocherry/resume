@InProceedings{Cherry2022,
  author    = {Boris Cherry and Pol Benats and Maxime Gobert and Loup Meurice and Csaba Nagy and Anthony Cleve},
  booktitle = {2022 {IEEE} International Conference on Software Analysis, Evolution and Reengineering ({SANER 2022})},
  title     = {Static Analysis of Database Accesses in {MongoDB} Applications},
  year      = {2022},
  month     = {mar},
  publisher = {{IEEE}},
  doi       = {10.1109/saner53432.2022.00111},
  groups    = {tool_paper},
}

@inproceedings{Cherry2024a,
title = {{SMEAGOL}: A Static Code Smell Detector for {MongoDB}},
author = {Cherry, Boris and Nagy, Csaba and Lanza, Michele and Cleve, Anthony},
year = {2024},
language = {English},
booktitle = {2024 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER 2024)},
publisher = {IEEE Computer society},
}


@inproceedings{Cherry2024,
title = {A Multivocal Mapping Study of {MongoDB} Smells},
author = {Cherry, Boris and Bernard, Jehan and Kintziger, Thomas and Nagy,Csaba and Cleve, Anthony and Lanza, Michele},
year = {2024},
language = {English},
booktitle = {2024 IEEE International Conference on Software Analysis, Evolution and Reengineering (SANER 2024)},
publisher = {IEEE Computer society},
}

@InProceedings{Cherry2020,
  author    = {Boris Cherry and Xavier Devroey and Pouria Derakhshanfar and Beno{\^i}t Vanderose},
  booktitle = {Proceedings of the 19th Belgium-Netherlands Software Evolution Workshop (BENEVOL '20)},
  title     = {Crash reproduction difficulty, an initial assessment},
  year      = {2020},
  editor    = {Mike Papadakis and Maxime Cordy},
  month     = dec,
  note      = {Funding Information: Copyright 2020 for this paper by its authors. Use permitted under Creative Commons License Attribution 4.0 International (CC BY 4.0). This research was partially funded by the EU Horizon 2020 ICT-10-2016-RIA “STAMP” project (No.731529). Publisher Copyright: Copyright 2020 for this paper by its authors.; 19th Belgium-Netherlands Software Evolution Workshop, BENEVOL 2020 ; Conference date: 03-12-2020 Through 04-12-2020},
  publisher = {CEUR-WS},
  series    = {CEUR Workshop Proceedings},
  volume    = {2912},
  abstract  = {This study presents the initial step towards a thorough analysis of the difficulty to reproduce a crash using searchbased crash reproduction. Traditionally, code size and complexity are considered representative indicators of the difficulty for search-based approaches, like search-based unit test generation, to generate tests. However, unlike unit test generation, crash reproduction does not seek to cover a set of behaviors but instead to generate one or more tests exercising a specific behavior reproducing a given crash. In this context, there is no guarantee that the indicators used for unit testing are still valid for crash reproduction. In this study, we seek to identify such indicators by considering various code metrics, code smells, and change metrics. We report our effort to collect those metrics for JCRASHPACK, a state-of-the-art crash reproduction benchmark, and an initial assessment by considering metrics individually. Our results show that although JCRASHPACK is larger than benchmarks used in previous studies, additional crashes should be added to improve its diversity and representativeness, and that no individual metric can be used to characterize the difficulty to reproduce a crash.},
  day       = {3},
  keywords  = {Change metrics, Code quality, Search-based crash reproduction, Software measurement},
  language  = {English},
  url       = {https://ceur-ws.org/Vol-2912/paper7.pdf},
}
